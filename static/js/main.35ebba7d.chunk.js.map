{"version":3,"sources":["constants/config.js","components/Corpo.js","components/ModalCadastro.js","components/Cabecalho.js","pages/Inicio.js","routes/Rotas.js","App.js","index.js"],"names":["BACKEND","Corpo","valorInicialItem","nome","status","quantidade","categoria","preco","useState","items","setItems","item","setItem","categorias","setCategorias","dropdownNomeCat","setDropdownNomeCat","mostrar","setMostrar","mostrarEdit","setMostrarEdit","erros","setErros","a","URL","fetch","then","res","json","data","catch","e","console","error","message","obterItems","_id","method","headers","Accept","novosErros","validaErrosItem","Object","keys","length","body","JSON","stringify","erro","useEffect","document","title","novosErrosItem","quant","map","Container","Card","Body","style","textAlign","Title","Text","Button","margin","variant","onClick","obtemCategorias","Modal","show","animation","onHide","Header","Footer","deletaItem","Form","Label","Control","name","type","value","isInvalid","onChange","target","Feedback","DropdownButton","id","itemCat","Dropdown","Item","eventKey","Col","Row","editaItem","ModalCadastro","props","valorInicialCategoria","titulo","setCategoria","errosCategoria","setErrosCategoria","errosItem","setErrosItem","aviso","setAviso","token","localStorage","getItem","validaErrosCategoria","mode","novosErrosCategoria","placeholder","Check","label","checked","salvarCategoria","width","salvarItem","Toast","onClose","delay","autohide","className","position","top","right","Cabecalho","setTitulo","editCat","setEditCat","obterCategorias","Navbar","backgroundColor","Brand","href","Nav","marginLeft","as","ButtonGroup","menuAlign","lg","Table","striped","bordered","hover","editarCategoria","deletaCategoria","Inicio","fluid","Rotas","exact","path","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.35ebba7d.chunk.js","sourcesContent":["export const BACKEND = \"http://localhost:4000\"\n\nconst config = { BACKEND }\n\nexport default config","import React, { useEffect, useState } from 'react'\n\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Modal from 'react-bootstrap/Modal'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nimport { MdDelete, MdEdit } from 'react-icons/md'\n\nimport { BACKEND } from '../constants'\n\nconst Corpo = () => {\n\n    const valorInicialItem = {\n        nome: '',\n        status: '',\n        quantidade: 0,\n        categoria: '',\n        preco: 0\n    }\n\n    const [items, setItems] = useState([])\n    const [item, setItem] = useState(valorInicialItem)\n\n    const [categorias, setCategorias]=useState()\n\n    const [dropdownNomeCat, setDropdownNomeCat] = useState('Selecione uma categoria')\n    const [mostrar, setMostrar] = useState(false)\n    const [mostrarEdit, setMostrarEdit] = useState(false)\n    const [erros, setErros] = useState({})\n\n    useEffect(() => {\n        document.title = 'Inicio'\n        let URL = `${BACKEND}/items`\n        fetch(URL)\n            .then(res => res.json())\n            .then(data => {\n                setItems(data)\n            })\n            .catch(function erro(e) {\n                console.error(`Erro ao obter os items: ${e.message}`)\n            })\n    }, [])\n\n    async function obtemCategorias() {\n        let URL = `${BACKEND}/categorias`\n        await fetch(URL)\n            .then(res => res.json())\n            .then(data => {\n                setCategorias(data)\n            })\n            .catch(function erro(e) {\n                console.error(`Erro ao obter as categorias: ${e.message}`)\n            })\n    }\n\n    async function obterItems() {\n        let URL = `${BACKEND}/items`\n        fetch(URL)\n            .then(res => res.json())\n            .then(data => {\n                setItems(data)\n            })\n            .catch(function erro(e) {\n                console.error(`Erro ao obter os items: ${e.message}`)\n            })\n    }\n\n    async function deletaItem() {\n        let URL = `${BACKEND}/items/${item._id}`\n        await fetch(URL, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(() => obterItems())\n            .catch(function erro(e) {\n                console.error(`Erro ao deletar o item: ${e.message}`)\n            })\n    }\n\n    async function editaItem(){\n        let novosErros = validaErrosItem()\n        if(Object.keys(novosErros).length>0){\n            setErros(novosErros)\n        }\n        else{\n            let URL = `${BACKEND}/items`\n            await fetch(URL,{\n                method:'PUT',\n                headers:{\n                    Accept:'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(item)\n            })\n            .then(res=>res.json())\n            .then(data=>{\n                setItem(valorInicialItem)\n                obterItems()\n            })\n            .catch(function(erro){\n                console.error(`Erro ao editar o item: ${erro.message}`)\n            })\n            setMostrarEdit(false)\n        }\n    }\n\n    const validaErrosItem = () => {\n        const novosErrosItem = {}\n        if (!item.nome || item.nome === '') novosErrosItem.nome = 'O nome não pode ser vazio'\n        else if (item.nome.length > 30) novosErrosItem.nome = 'O nome deve ser menor que 30'\n        else if (item.nome.length < 3) novosErrosItem.nome = 'O nome deve ser maior que 3'\n\n        if (item.quantidade < 0 || item.quantidade === null) novosErrosItem.quant = 'A quantidade deve ser maior ou igual há 0'\n        if (item.preco <= 0 || item.preco === null) novosErrosItem.preco = 'O preço deve ser maior que 0'\n\n        return novosErrosItem\n    }\n\n    return (\n        <>{items &&\n            items.map(item => (\n                <Container key={item._id}>\n                    <Card>\n                        <Card.Body\n                            style={{ textAlign: 'center' }} >\n                            <Card.Title>{item.nome}\n                            </Card.Title>\n                            <Card.Text>\n                                Em estoque: {item.quantidade}\n                                &nbsp;\n                                preço: R${item.preco}\n                            </Card.Text>\n                            <Button\n                                style={{ margin: 10 }}\n                                variant='danger'\n                                onClick={() => {\n                                    setMostrar(true)\n                                    setItem(item)\n                                }}\n                            ><MdDelete /></Button>\n                            <Button\n                                style={{ margin: 10 }} variant='outline-primary'\n                                onClick={() => {\n                                    setMostrarEdit(true)\n                                    setItem(item)\n                                    obtemCategorias()\n                                }}\n                            ><MdEdit /> </Button>\n                        </Card.Body>\n                    </Card>\n\n                </Container>\n            ))\n        }\n            <Modal\n                show={mostrar}\n                animation={false}\n                onHide={() => setMostrar(false)} >\n                <Modal.Header>\n                    <Modal.Title>Atenção</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Deseja realmente deletar o item selecionado?</Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        variant='danger'\n                        onClick={() => {\n                            setMostrar(false)\n                            setItem(null)\n                        }}>\n                        Cancelar\n                    </Button>\n                    <Button\n                        variant='success'\n                        onClick={() => {\n                            deletaItem()\n                            setMostrar(false)\n                        }}>\n                        Confirmar\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            {item &&\n                <Modal\n                    show={mostrarEdit}\n                    animation={false}\n                    onHide={() => {\n                        setMostrarEdit(false)\n                    }}>\n                    <Modal.Header>\n                        <Modal.Title>Editando item</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <Form.Label>Nome do item</Form.Label>\n                            <Form.Control\n                                name='nome'\n                                type='text'\n                                value={item.nome}\n                                isInvalid={!!erros.nome}\n                                onChange={(e) => {\n                                    setItem({\n                                        ...item,\n                                        [e.target.name]:\n                                            e.target.value\n                                    })\n                                }}\n                            />\n                            <Form.Control.Feedback type='invalid'>\n                                {erros.nome}\n                            </Form.Control.Feedback>\n                            <br />\n                            <DropdownButton\n                                variant='secondary'\n                                title={dropdownNomeCat}\n                                id=\"cadastros\">\n                                {categorias&&\n                                    categorias.map(itemCat => (\n                                        <Dropdown.Item\n                                            key={itemCat._id}\n                                            name={'categoria'}\n                                            value={itemCat._id}\n                                            onClick={(e) => {\n                                                setDropdownNomeCat(itemCat.nome)\n                                            }}\n                                            eventKey={itemCat._id}\n                                        >{itemCat.nome}</Dropdown.Item>\n                                    ))\n                                }\n                            </DropdownButton>\n                            <br />\n                            <Col>\n                                <Row>\n                                    <Form.Label>Quantidade: </Form.Label>\n                                &nbsp;\n                                <Form.Control\n                                        name='quantidade'\n                                        type='number'\n                                        value={item.quantidade}\n                                        isInvalid={!!erros.quant}\n                                        onChange={(e) => {\n                                            setItem({\n                                                ...item,\n                                                [e.target.name]:\n                                                    e.target.value\n                                            })\n                                        }} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {erros.quant}\n                                    </Form.Control.Feedback>\n                                    &nbsp;\n                                    &nbsp;\n                                <Form.Label>Preço: </Form.Label>\n                                &nbsp;\n                                <Form.Control\n                                        name='preco'\n                                        type='number'\n                                        value={item.preco}\n                                        isInvalid={!!erros.preco}\n                                        onChange={(e) => {\n                                            setItem({\n                                                ...item,\n                                                [e.target.name]:\n                                                    e.target.value\n                                            })\n                                        }} />\n                                    <Form.Control.Feedback type='invalid'>\n                                        {erros.preco}\n                                    </Form.Control.Feedback>\n                                </Row>\n                            </Col>\n                            <Button\n                                variant='danger'\n                                style={{ margin: 10 }}\n                                onClick={() => {\n                                    setMostrarEdit(false)\n                                }} >\n                                Cancelar\n                        </Button>\n                            <Button\n                                variant='success'\n                                style={{ margin: 10 }}\n                                onClick={() => {\n                                    editaItem()\n                                }} >\n                                Confirmar\n                        </Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n            }\n        </>\n    )\n}\n\nexport default Corpo","import React, { useEffect, useState } from 'react'\n\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Toast from 'react-bootstrap/Toast'\n\nimport { BACKEND } from '../constants'\n\nconst ModalCadastro = (props) => {\n\n    const valorInicialCategoria = {\n        nome: '',\n        status: true\n    }\n\n    const valorInicialItem = {\n        nome: '',\n        status: '',\n        quantidade: 0,\n        categoria: '',\n        preco: 0\n    }\n\n    const { mostrar, titulo } = props\n\n    const [categoria, setCategoria] = useState(valorInicialCategoria)\n    const { nome, status } = categoria\n    const [categorias, setCategorias] = useState([])\n    const [errosCategoria, setErrosCategoria] = useState({})\n\n    const [item, setItem] = useState(valorInicialItem)\n    const [errosItem, setErrosItem] = useState({})\n\n    const [dropdownNomeCat, setDropdownNomeCat] = useState('Selecione uma categoria')\n    const [aviso, setAviso] = useState('')\n\n    const token = localStorage.getItem('access_token')\n\n    useEffect(() => {\n        obtemCategorias()\n    }, [])\n\n    async function obtemCategorias() {\n        let URL = `${BACKEND}/categorias`\n        await fetch(URL)\n            .then(res => res.json())\n            .then(data => {\n                setCategorias(data)\n            })\n            .catch(function erro(e) {\n                console.error(`Erro ao obter as categorias: ${e.message}`)\n            })\n    }\n\n    async function salvarCategoria() {\n        const novosErros = validaErrosCategoria()\n        if (Object.keys(novosErros).length > 0) {\n            setErrosCategoria(novosErros)\n        }\n        else {\n            let URL = `${BACKEND}/categorias`\n            categoria.status = (categoria.status === true || categoria.status === 'ativo') ? 'ativo' : 'inativo'\n\n            await fetch(URL, {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(categoria)\n            })\n                .then(res => res.json())\n                .then(data => {\n                    (data._id || data.message) ? setAviso('Registro salvo') : setAviso('')\n\n                    setCategoria(valorInicialCategoria)\n                })\n                .catch(function (erro) {\n                    console.error(`Erro ao salvar a categoria: ${erro.message}`)\n                })\n        }\n    }\n\n    async function salvarItem() {\n        const novosErros = validaErrosItem()\n        if (Object.keys(novosErros).length > 0) {\n            setErrosItem(novosErros)\n        }\n        else {\n            let URL = `${BACKEND}/items`\n            item.status=(item.quantidade>0)? 'disponivel':'indisponivel'\n\n            await fetch(URL, {\n                mode:'cors',\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'access-token': token\n                },\n                body: JSON.stringify(item)\n            })\n                .then(res => res.json())\n                .then(data => {\n                    (data._id || data.message) ? setAviso('Registro salvo') : setAviso('')\n\n                    setItem(valorInicialItem)\n                })\n                .catch(function (erro) {\n                    console.error(`Erro ao salvar a categoria: ${erro.message}`)\n                })\n        }\n    }\n\n    const validaErrosCategoria = () => {\n        const novosErrosCategoria = {}\n\n        if (!nome || nome === '') novosErrosCategoria.nome = 'O nome não pode ser vazio'\n        else if (nome.length > 20) novosErrosCategoria.nome = 'O nome deve ser menor que 20'\n        else if (nome.length < 3) novosErrosCategoria.nome = 'O nome deve ser maior que 3'\n\n        return novosErrosCategoria\n    }\n\n    const validaErrosItem = () => {\n        const novosErrosItem = {}\n        if (!item.nome || item.nome === '') novosErrosItem.nome = 'O nome não pode ser vazio'\n        else if (item.nome.length > 30) novosErrosItem.nome = 'O nome deve ser menor que 30'\n        else if (item.nome.length < 3) novosErrosItem.nome = 'O nome deve ser maior que 3'\n\n        if (item.quantidade < 0 || item.quantidade === null) novosErrosItem.quant = 'A quantidade deve ser maior ou igual há 0'\n        if (item.preco <= 0 || item.preco === null) novosErrosItem.preco = 'O preço deve ser maior que 0'\n\n        return novosErrosItem\n    }\n\n    return (\n        <Modal\n            animation={false}\n            show={mostrar}\n            onHide={() => {\n                props.setMostrar(!mostrar)\n                setCategoria(valorInicialCategoria)\n                setItem(valorInicialItem)\n            }}>\n            <Modal.Header>\n                <Modal.Title>Cadastro de {titulo}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {titulo === 'Categorias' ?\n                    <Form>\n                        <Form.Label>Nome da Categoria</Form.Label>\n                        <Form.Control\n                            name='nome'\n                            placeholder='EX: Camisa'\n                            value={nome}\n                            isInvalid={!!errosCategoria.nome}\n                            onChange={(e) => {\n                                setCategoria({\n                                    ...categoria,\n                                    [e.target.name]:\n                                        e.target.value\n                                })\n                                setErrosCategoria({})\n                            }\n                            }\n                            type='text' />\n                        <Form.Control.Feedback type='invalid'>\n                            {errosCategoria.nome}\n                        </Form.Control.Feedback>\n                        <Form.Label>Status Ativo?</Form.Label>\n                        <Form.Check\n                            type='checkbox'\n                            label='Ativo'\n                            name='catStatus'\n                            checked={status}\n                            onChange={(e) => setCategoria({\n                                ...categoria,\n                                [e.target.name]:\n                                    e.target.checked\n                            })\n                            } />\n                        <Button\n                            variant='danger'\n                            style={{\n                                margin: 10\n                            }}\n                            onClick={() => {\n                                props.setMostrar(!mostrar)\n                                setCategoria(valorInicialCategoria)\n                            }}>\n                            Cancelar\n                        </Button>\n                        <Button\n                            variant='success'\n                            style={{\n                                margin: 10\n                            }}\n                            onClick={() => salvarCategoria()}>\n                            Confirmar\n                        </Button>\n                    </Form>\n                    :\n                    <Form>\n                        <Form.Label>Nome do item</Form.Label>\n                        <Form.Control\n                            name='nome'\n                            type='text'\n                            placeholder='EX: tenis adidas'\n                            value={item.nome}\n                            isInvalid={!!errosItem.nome}\n                            onChange={(e) => {\n                                setItem({\n                                    ...item,\n                                    [e.target.name]:\n                                        e.target.value\n                                })\n                            }}\n                        />\n                        <Form.Control.Feedback type='invalid'>\n                            {errosItem.nome}\n                        </Form.Control.Feedback>\n                        <br />\n                        <DropdownButton\n                            variant='secondary'\n                            title={dropdownNomeCat}\n                            id=\"cadastros\">\n                            {\n                                categorias.map(itemCat => (\n                                    <Dropdown.Item\n                                        key={itemCat._id}\n                                        name={'categoria'}\n                                        value={itemCat._id}\n                                        onClick={(e) => {\n                                            setDropdownNomeCat(itemCat.nome)\n                                        }}\n                                        eventKey={itemCat._id}\n                                    >{itemCat.nome}</Dropdown.Item>\n                                ))\n                            }\n                        </DropdownButton>\n                        <br />\n                        <Col>\n                            <Row>\n                                <Form.Label>Quantidade: </Form.Label>\n                                &nbsp;\n                                <Form.Control\n                                    name='quantidade'\n                                    type='number'\n                                    value={item.quantidade}\n                                    isInvalid={!!errosItem.quant}\n                                    style={{\n                                        width: 100\n                                    }}\n                                    onChange={(e) => {\n                                        setItem({\n                                            ...item,\n                                            [e.target.name]:\n                                                e.target.value\n                                        })\n                                    }} />\n                                <Form.Control.Feedback type='invalid'>\n                                    {errosItem.quant}\n                                </Form.Control.Feedback>\n                                    &nbsp;\n                                    &nbsp;\n                                <Form.Label>Preço: </Form.Label>\n                                &nbsp;\n                                <Form.Control\n                                    name='preco'\n                                    type='number'\n                                    value={item.preco}\n                                    isInvalid={!!errosItem.preco}\n                                    style={{\n                                        width: 100\n                                    }}\n                                    onChange={(e) => {\n                                        setItem({\n                                            ...item,\n                                            [e.target.name]:\n                                                e.target.value\n                                        })\n                                    }} />\n                                <Form.Control.Feedback type='invalid'>\n                                    {errosItem.preco}\n                                </Form.Control.Feedback>\n                            </Row>\n                        </Col>\n                        <Button\n                            variant='danger'\n                            style={{\n                                margin: 10\n                            }}\n                            onClick={() => {\n                                props.setMostrar(!mostrar)\n                                setItem(valorInicialItem)\n                                setDropdownNomeCat('Selecione uma categoria')\n                            }}>\n                            Cancelar\n                        </Button>\n                        <Button\n                            variant='success'\n                            style={{\n                                margin: 10\n                            }}\n                            onClick={() => salvarItem()}>\n                            Confirmar\n                        </Button>\n                    </Form>\n                }\n                <Toast\n                    onClose={() => setAviso('')}\n                    show={aviso.length > 0}\n                    animation={false}\n                    delay={4000}\n                    autohide\n                    className=\"bg-success\"\n                    style={{\n                        position: 'absolute',\n                        top: 0,\n                        right: 0\n                    }}>\n                    <Toast.Header>Aviso</Toast.Header>\n                    <Toast.Body className=\"text-light\">{aviso}</Toast.Body>\n                </Toast>\n            </Modal.Body>\n        </Modal >\n    )\n}\n\nexport default ModalCadastro","import React, { useState } from 'react'\n\nimport ModalCadastro from '../components/ModalCadastro'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Table from 'react-bootstrap/Table'\nimport Form from 'react-bootstrap/Form'\n\nimport { MdDelete, MdEdit } from 'react-icons/md'\n\nimport { FaStoreAlt } from \"react-icons/fa\";\nimport { BACKEND } from '../constants'\n\n\nconst Cabecalho = () => {\n\n  const valorInicialCategoria = {\n    nome: '',\n    status: true\n  }\n\n  const [mostrar, setMostrar] = useState(false)\n  const [titulo, setTitulo] = useState('')\n\n  const [categorias, setCategorias] = useState()\n  const [categoria, setCategoria] = useState(valorInicialCategoria)\n  const [editCat, setEditCat] = useState(false)\n\n  async function obterCategorias() {\n    let URL = `${BACKEND}/categorias`\n    await fetch(URL)\n      .then(res => res.json())\n      .then(data => {\n        setCategorias(data)\n      })\n      .then(\n        setEditCat(true),\n      )\n      .catch(function (erro) {\n        console.error(`Erro ao obter as categorias: ${erro.message}`)\n      })\n  }\n\n  async function deletaCategoria() {\n    let URL = `${BACKEND}/categorias/${categoria.nome}`\n    await fetch(URL, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-type': 'application/json'\n      }\n    })\n      .then(res => res.json())\n      .then(() => obterCategorias())\n      .catch(function erro(e) {\n        console.error(`Erro ao deletar o item: ${e.message}`)\n      })\n  }\n\n  async function editarCategoria() {\n\n    let URL = `${BACKEND}/items`\n    await fetch(URL, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(categoria)\n    })\n      .then(res => res.json())\n      .then(data => {\n        setCategoria(valorInicialCategoria)\n        obterCategorias()\n      })\n      .catch(function (erro) {\n        console.error(`Erro ao editar o item: ${erro.message}`)\n      })\n\n  }\n\n  return (\n    <>\n      <Navbar\n        style={{ backgroundColor: '#303030' }}\n        variant=\"dark\">\n        <Navbar.Brand\n          href=\"#inicio\">\n          <FaStoreAlt /> Loja\n      </Navbar.Brand>\n        <Nav\n          className=\"mr-auto\">\n          <DropdownButton\n            style={{ marginLeft: 20 }}\n            variant='secondary'\n            as={ButtonGroup}\n            menuAlign={{ lg: 'right' }}\n            title=\"Cadastros\"\n            id=\"cadastros\">\n            <Dropdown.Item\n              eventKey=\"1\"\n              onClick={() => {\n                setTitulo('Categorias')\n                setMostrar(!mostrar)\n              }}> Categorias</Dropdown.Item>\n            <Dropdown.Item\n              eventKey=\"2\"\n              onClick={() => {\n                setTitulo(\"Item\")\n                setMostrar(!mostrar)\n              }} > Items</Dropdown.Item>\n          </DropdownButton>\n          <Button\n            variant='secondary'\n            style={{ marginLeft: 10 }}\n            onClick={() => {\n              obterCategorias()\n            }}>\n            Editar categorias\n          </Button>\n        </Nav>\n      </Navbar>\n      <ModalCadastro\n        mostrar={mostrar}\n        setMostrar={setMostrar}\n        titulo={titulo}\n      />\n      {categorias &&\n        <Modal\n          show={editCat}\n          animation={false}\n          onHide={() => {\n            setEditCat(false)\n          }} >\n          <Modal.Header>\n            <Modal.Title>Editar Categorias</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Table striped bordered hover>\n                <thead>\n                  <tr className=\"bg-success text-dark\">\n                    <th>Nome</th>\n                    <th>Status</th>\n                    <th>Opções</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    categorias.map(item => (\n                      <tr key={item._id}>\n                        <td>\n                          <Form.Control\n                            name='nome'\n                            value={item.nome}\n                            onChange={(e) => {\n                              setCategoria({\n                                ...categoria,\n                                [e.target.name]:\n                                  e.target.value\n                              })\n                            }} />\n                        </td>\n                        <td>\n                          <Form.Check\n                            type='checkbox'\n                            label='Ativo'\n                            name='status'\n                            checked={item.status}\n                            onChange={(e) =>\n                              setCategoria({\n                                ...categoria,\n                                [e.target.name]:\n                                  e.target.checked\n                              })\n                            } />\n                        </td>\n                        <td>\n                          <Button\n                            variant=\"outline-primary\"\n                            onClick={() => {\n                              setCategoria(item)\n                              editarCategoria()\n                            }}>\n                            <MdEdit />\n                          </Button>\n                      &nbsp;\n                       <Button\n                            variant=\"outline-danger\"\n                            onClick={() => {\n                              setCategoria(item)\n                              deletaCategoria()\n                            }} >\n                            <MdDelete />\n                          </Button>\n                        </td>\n                      </tr>\n                    ))\n                  }\n                </tbody>\n              </Table>\n              <Button\n                variant='danger'\n                onClick={() => {\n                  setEditCat(false)\n                }} >\n                  Cancelar\n              </Button>\n            </Form>\n          </Modal.Body>\n        </Modal>\n      }\n    </>\n  )\n}\n\nexport default Cabecalho","import React from 'react'\n\nimport Container from 'react-bootstrap/Container'\n\nimport Corpo from '../components/Corpo'\nimport Cabecalho from '../components/Cabecalho'\n\nconst Inicio = () => {\n\n    /*async function obtemItems(){\n        let URL = `${BACKEND}/items`\n        await fetch(URL)\n        .then(res=>res.json())\n        .then(data=>{\n            setItems(data)\n            console.log(items)\n        })\n        .catch(function erro(e){\n            console.error(`Erro ao obter os items: ${e.message}`)\n        })\n    }*/\n\n    return (\n        <>\n            <Container fluid className=\"p-0\">\n                <Cabecalho />\n                <Corpo/>\n            </Container>\n        </>\n    )\n}\n\nexport default Inicio","import React from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\n\nimport Inicio from '../pages/Inicio'\n\nexport default function Rotas(){\n    return (\n        <HashRouter>\n            <Switch>\n                <Route exact path=\"/\" component={Inicio} />\n            </Switch>\n        </HashRouter>\n    )\n}","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Rotas from './routes/Rotas'\n\nconst App = () => {\n  return (\n    <Rotas />\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}